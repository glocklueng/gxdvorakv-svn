<?xml version="1.0" encoding="utf-8"?>
<project name="VCCompiler" default="build" basedir=".">
  <!--loadtasks>
		<fileset>
			<include name="${ASBIN}\BR.VC.Core.dll" />
			<include name="${ASBIN}\BR.VC.CoreCompiler.dll" />
			<include name="${ASBIN}\BR.VC.Util.dll" />
			<include name="${ASBIN}\BR.VC.FontUtil.dll" />
			<include name="${ASBIN}\BR.VC.CRC32.dll" />
			<include name="${ASBIN}\BR.VC.DataSer.Interop.dll" />
		</fileset>
	</loadtasks-->
  <target name="build" description="compiles the intermediate file" depends="Init,stylesheets,unitgroups,datapoints,datasources,alarmconfig,alarmgroups,borders,languagefonts,bitmapgroups,virtualkeys,runtime,touchpads,bitmaps,textgroups,layers,pages,font_ttf,font_ttc,HwPP,hardware" />
  <target name="clean" description="remove all generated files" depends="Init">
    <foreach item="File" property="filename">
      <in>
        <items>
          <include name="${tmp_folder}\page.*.vco" />
          <include name="${tmp_folder}\*.arg" />
          <include name="${tmp_folder}\bmgrp.*.vco" />
          <include name="${tmp_folder}\layer.*.vco" />
          <include name="${tmp_folder}\bdr.*.vco" />
          <include name="${tmp_folder}\*.vca" />
          <include name="${tmp_folder}\txtgrp.*.vco" />
          <include name="${tmp_folder}\tpr.*.vco" />
          <include name="${tmp_folder}\dis.*.vco" />
          <include name="${tmp_folder}\lfnt.*.vco" />
          <include name="${tmp_folder}\vcs.*.vco" />
          <include name="${tmp_folder}\vcvk.*.vco" />
          <include name="${tmp_folder}\vcrt.vco" />
          <include name="${tmp_folder}\*.vcm" />
          <include name="${tmp_shared}\dpt.*.vco" />
          <include name="${tmp_shared}\dso.*.vco" />
          <include name="${tmp_shared}\vcug.*.vco" />
          <include name="${tmp_shared}\algrp.*.vco" />
          <include name="${tmp_shared}\alcfg.*.vco" />
          <!--include name="${tmp_shared}\*.vcm" /-->
          <include name="temp\objects\config1\pcc1\*.vca" />
          <include name="temp\objects\config1\pcc1\vcFntdat\*.ttf.vco" />
          <include name="temp\objects\config1\pcc1\vcFntdat\*.ttc.vco" />
          <include name="temp\objects\config1\pcc1\graphics\bminfo.*.vco" />
        </items>
      </in>
      <do>
        <if test="${file::exists(filename)}">
          <delete file="${filename}" verbose="${verbose}" failonerror="false" />
        </if>
      </do>
    </foreach>
  </target>
  <target name="Init">
    <echo message="Path and Values initalized... Ok" />
    <property name="lang" value="Logical\VCShared\Languages.vcr" />
    <property name="cvers" value="logical\VCShared\ControlVersion.cvinfo" />
    <property name="verbose" value="true" />
    <property name="DefStyle" value="${DefStyleSheet}" />
    <property name="pal" value="logical\${vcobj}\Palette.vcr" />
    <property name="logvcp" value="logical\${vcobj}\Package.vcp" />
    <property name="vkey" value="Logical\${vcobj}\VirtualKeys.vcvk" />
    <property name="ds" value="Logical\${vcobj}\StyleSheets\${DefStyle}.vcs" />
    <property name="tmp_folder" value="temp\objects\config1\pcc1\${vcobj}" />
    <property name="tmp_shared" value="temp\objects\config1\pcc1\vcshared" />
    <property name="prj" value="temp\objects\config1\pcc1\${vcobj}\${vcobj}.prj" />
    <foreach item="File" property="filename">
      <in>
        <items>
          <include name="${tmp_folder}\*.arg" />
          <exclude name="${tmp_folder}\log.arg" />
        </items>
      </in>
      <do>
        <if test="${file::exists(filename)}">
          <delete file="${filename}" verbose="${verbose}" failonerror="false" />
        </if>
      </do>
    </foreach>
    <if test="${file::exists(lang)}">
      <ifnot test="${file::up-to-date(lang,prj)}">
        <foreach item="File" property="filename">
          <in>
            <items>
              <include name="${tmp_folder}\page.*.vco" />
              <include name="${tmp_folder}\bmgrp.*.vco" />
              <include name="${tmp_folder}\layer.*.vco" />
              <include name="${tmp_folder}\*.vca" />
              <include name="${tmp_folder}\txtgrp.*.vco" />
              <include name="${tmp_folder}\tpr.*.vco" />
              <include name="${tmp_folder}\lfnt.*.vco" />
              <include name="${tmp_folder}\vcs.*.vco" />
              <include name="${tmp_shared}\vcug.*.vco" />
              <include name="${tmp_shared}\algrp.*.vco" />
              <include name="${tmp_shared}\alcfg.*.vco" />
            </items>
          </in>
          <do>
            <if test="${file::exists(filename)}">
              <delete file="${filename}" verbose="${verbose}" failonerror="false" />
            </if>
          </do>
        </foreach>
      </ifnot>
    </if>
  </target>
  <target name="pages" description="compiles the intermediate file" depends="stylesheets,textgroups,datapoints,languagefonts,bitmaps,virtualkeys,borders,runtime,layers">
    <!--echo message="Compiling Pages" /-->
    <property name="target" value="page" />
    <property name="buildfile" value="${tmp_folder}\${target}.arg" />
    <if test="${file::exists(buildfile)}">
      <delete file="${buildfile}" verbose="${verbose}" failonerror="false" />
    </if>
    <foreach item="File" property="filename">
      <in>
        <items>
          <include name="logical\${vcobj}\pages\*.${target}" />
        </items>
      </in>
      <do>
        <property name="tmp" value="" />
        <property name="src" value="" />
        <property name="file" value="" />
        <regex pattern="(?'file'\w+).${target}$" input="${filename}" />
        <regex pattern="\\logical(?'tmp'.*)$" input="${filename}" />
        <property name="src" value="logical${tmp}" />
        <property name="dest" value="${tmp_folder}\${target}.${file}.vco" />
        <ifnot test="${file::up-to-date(src,dest)}">
          <echo file="${buildfile}" append="true">-c ${buildfile} -f ${src} -o ${dest} -l ${lang} -cv ${cvers} -pal ${pal} -ds ${ds} ${vccflag}</echo>
        </ifnot>
      </do>
    </foreach>
    <exec program="${asbin}\BR.VC.Compiler.exe" commandline="-c ${buildfile}" />
  </target>
  <target name="bitmaps" description="compiles the intermediate file">
    <!--echo message="Compiling Bitmaps" /-->
    <property name="target" value="bminfo" />
    <property name="buildfile" value="${tmp_folder}\${target}.arg" />
    <if test="${file::exists(buildfile)}">
      <delete file="${buildfile}" verbose="${verbose}" failonerror="false" />
    </if>
    <foreach item="File" property="filename">
      <in>
        <items>
          <include name="logical\${vcobj}\bitmaps\*.${target}" />
        </items>
      </in>
      <do>
        <property name="src" value="" />
        <property name="tmp" value="" />
        <property name="file" value="" />
        <regex pattern="(?'file'\w+).${target}$" input="${filename}" />
        <regex pattern="\\logical(?'tmp'.*)$" input="${filename}" />
        <property name="src" value="logical${tmp}" />
        <property name="dest" value="${tmp_folder}\graphics\${target}.${file}.vco" />
        <ifnot test="${file::up-to-date(src,dest)}">
          <echo file="${buildfile}" append="true">-c ${buildfile} -f ${src} -o ${dest} -l ${lang} -cv ${cvers} -pal ${pal} ${vccflag}</echo>
        </ifnot>
      </do>
    </foreach>
    <exec program="${asbin}\BR.VC.Compiler.exe" commandline="-c ${buildfile}" />
  </target>
  <target name="textgroups" description="compiles the intermediate file" depends="datapoints">
    <!--echo message="Compiling Textgrp" /-->
    <property name="target" value="txtgrp" />
    <property name="buildfile" value="${tmp_folder}\${target}.arg" />
    <if test="${file::exists(buildfile)}">
      <delete file="${buildfile}" verbose="${verbose}" failonerror="false" />
    </if>
    <foreach item="File" property="filename">
      <in>
        <items>
          <include name="logical\${vcobj}\textgroups\*.${target}" />
        </items>
      </in>
      <do>
        <property name="src" value="" />
        <property name="tmp" value="" />
        <property name="file" value="" />
        <regex pattern="(?'file'\w+).${target}$" input="${filename}" />
        <regex pattern="\\logical(?'tmp'.*)$" input="${filename}" />
        <property name="src" value="logical${tmp}" />
        <property name="dest" value="${tmp_folder}\${target}.${file}.vco" />
        <ifnot test="${file::up-to-date(src,dest)}">
          <echo file="${buildfile}" append="true">-c ${buildfile} -f ${src} -o ${dest} -l ${lang} -cv ${cvers} -pal ${pal} ${vccflag}</echo>
        </ifnot>
      </do>
    </foreach>
    <exec program="${asbin}\BR.VC.Compiler.exe" commandline="-c ${buildfile}" />
  </target>
  <target name="bitmapgroups" description="compiles the intermediate file" depends="bitmaps">
    <!--echo message="Compiling BitmapGroups" /-->
    <property name="target" value="bmgrp" />
    <property name="buildfile" value="${tmp_folder}\${target}.arg" />
    <if test="${file::exists(buildfile)}">
      <delete file="${buildfile}" verbose="${verbose}" failonerror="false" />
    </if>
    <foreach item="File" property="filename">
      <in>
        <items>
          <include name="logical\${vcobj}\bitmapgroups\*.${target}" />
        </items>
      </in>
      <do>
        <property name="src" value="" />
        <property name="tmp" value="" />
        <property name="file" value="" />
        <regex pattern="(?'file'\w+).${target}$" input="${filename}" />
        <regex pattern="\\logical(?'tmp'.*)$" input="${filename}" />
        <property name="src" value="logical${tmp}" />
        <property name="dest" value="${tmp_folder}\${target}.${file}.vco" />
        <ifnot test="${file::up-to-date(src,dest)}">
          <echo file="${buildfile}" append="true">-c ${buildfile} -f ${src} -o ${dest} -l ${lang} -cv ${cvers} -pal ${pal} ${vccflag}</echo>
        </ifnot>
      </do>
    </foreach>
    <exec program="${asbin}\BR.VC.Compiler.exe" commandline="-c ${buildfile}" />
  </target>
  <target name="borders" description="compiles the intermediate file">
    <!--echo message="Compiling Border" /-->
    <property name="target" value="bdr" />
    <property name="buildfile" value="${tmp_folder}\${target}.arg" />
    <if test="${file::exists(buildfile)}">
      <delete file="${buildfile}" verbose="${verbose}" failonerror="false" />
    </if>
    <foreach item="File" property="filename">
      <in>
        <items>
          <include name="logical\${vcobj}\borders\*.${target}" />
        </items>
      </in>
      <do>
        <property name="src" value="" />
        <property name="tmp" value="" />
        <property name="file" value="" />
        <regex pattern="(?'file'\w+).${target}$" input="${filename}" />
        <regex pattern="\\logical(?'tmp'.*)$" input="${filename}" />
        <property name="src" value="logical${tmp}" />
        <property name="dest" value="${tmp_folder}\${target}.Bordermanager.vco" />
        <ifnot test="${file::up-to-date(src,dest)}">
          <echo file="${buildfile}" append="true">-c ${buildfile} -f ${src} -o ${dest} -l ${lang} -cv ${cvers} -pal ${pal} ${vccflag}</echo>
        </ifnot>
      </do>
    </foreach>
    <exec program="${asbin}\BR.VC.Compiler.exe" commandline="-c ${buildfile}" />
  </target>
  <target name="layers" description="compiles the intermediate file" depends="stylesheets,textgroups,datapoints,languagefonts,bitmaps,virtualkeys,borders,runtime">
    <!--echo message="Compiling Layer" /-->
    <property name="target" value="layer" />
    <property name="buildfile" value="${tmp_folder}\${target}.arg" />
    <if test="${file::exists(buildfile)}">
      <delete file="${buildfile}" verbose="${verbose}" failonerror="false" />
    </if>
    <foreach item="File" property="filename">
      <in>
        <items>
          <include name="logical\${vcobj}\layers\*.${target}" />
        </items>
      </in>
      <do>
        <property name="tmp" value="" />
        <property name="src" value="" />
        <property name="file" value="" />
        <regex pattern="(?'file'\w+).${target}$" input="${filename}" />
        <regex pattern="\\logical(?'tmp'.*)$" input="${filename}" />
        <property name="src" value="logical${tmp}" />
        <property name="dest" value="${tmp_folder}\${target}.${file}.vco" />
        <ifnot test="${file::up-to-date(src,dest)}">
          <echo file="${buildfile}" append="true">-c ${buildfile} -f ${src} -o ${dest} -l ${lang} -cv ${cvers} -pal ${pal} ${vccflag}</echo>
          <foreach item="File" property="filename">
            <in>
              <items>
                <include name="${tmp_folder}\page.*.vco" />
              </items>
            </in>
            <do>
              <delete file="${filename}" verbose="${verbose}" failonerror="false" />
            </do>
          </foreach>
        </ifnot>
      </do>
    </foreach>
    <exec program="${asbin}\BR.VC.Compiler.exe" commandline="-c ${buildfile}" />
  </target>
  <target name="unitgroups" description="compiles the intermediate file" depends="datapoints">
    <!--echo message="Compiling UnitGroups" /-->
    <property name="target" value="vcug" />
    <property name="buildfile" value="${tmp_folder}\${target}.arg" />
    <if test="${file::exists(buildfile)}">
      <delete file="${buildfile}" verbose="${verbose}" failonerror="false" />
    </if>
    <foreach item="File" property="filename">
      <in>
        <items>
          <include name="logical\vcshared\unitgroups\*.${target}" />
        </items>
      </in>
      <do>
        <property name="tmp" value="" />
        <property name="src" value="" />
        <property name="file" value="" />
        <regex pattern="(?'file'\w+).${target}$" input="${filename}" />
        <regex pattern="\\logical(?'tmp'.*)$" input="${filename}" />
        <property name="src" value="logical${tmp}" />
        <property name="dest" value="${tmp_shared}\${target}.${file}.vco" />
        <ifnot test="${file::up-to-date(src,dest)}">
          <echo file="${buildfile}" append="true">-c ${buildfile} -f ${src} -o ${dest} -l ${lang} -cv ${cvers} -pal ${pal} ${vccflag}</echo>
        </ifnot>
      </do>
    </foreach>
    <exec program="${asbin}\BR.VC.Compiler.exe" commandline="-c ${buildfile}" />
  </target>
  <target name="stylesheets" description="compiles the intermediate file" depends="languagefonts,textgroups,borders">
    <!--echo message="Compiling StyleSheets" /-->
    <property name="target" value="vcs" />
    <property name="buildfile" value="${tmp_folder}\${target}.arg" />
    <if test="${file::exists(buildfile)}">
      <delete file="${buildfile}" verbose="${verbose}" failonerror="false" />
    </if>
    <foreach item="File" property="filename">
      <in>
        <items>
          <include name="logical\${vcobj}\stylesheets\*.${target}" />
        </items>
      </in>
      <do>
        <property name="tmp" value="" />
        <property name="src" value="" />
        <property name="file" value="" />
        <regex pattern="(?'file'\w+).${target}$" input="${filename}" />
        <regex pattern="\\logical(?'tmp'.*)$" input="${filename}" />
        <property name="src" value="logical${tmp}" />
        <property name="dest" value="${tmp_folder}\${target}.${file}.vco" />
        <ifnot test="${file::up-to-date(src,dest)}">
          <echo file="${buildfile}" append="true">-c ${buildfile} -f ${src} -o ${dest} -l ${lang} -cv ${cvers} ${logvcp} -pal ${pal} -ds 'Source[local].StyleSheet[${DefStyle}]' ${vccflag}</echo>
        </ifnot>
      </do>
    </foreach>
    <exec program="${asbin}\BR.VC.Compiler.exe" commandline="-c ${buildfile}" />
  </target>
  <target name="alarmgroups" description="compiles the intermediate file" depends="datapoints">
    <!--echo message="Compiling AlarmGroups" /-->
    <property name="target" value="algrp" />
    <property name="buildfile" value="${tmp_folder}\${target}.arg" />
    <if test="${file::exists(buildfile)}">
      <delete file="${buildfile}" verbose="${verbose}" failonerror="false" />
    </if>
    <foreach item="File" property="filename">
      <in>
        <items>
          <include name="logical\vcshared\alarmgroups\*.${target}" />
        </items>
      </in>
      <do>
        <property name="tmp" value="" />
        <property name="file" value="" />
        <property name="src" value="" />
        <regex pattern="(?'file'\w+).${target}$" input="${filename}" />
        <regex pattern="\\logical(?'tmp'.*)$" input="${filename}" />
        <property name="src" value="logical${tmp}" />
        <property name="dest" value="${tmp_shared}\${target}.${file}.vco" />
        <ifnot test="${file::up-to-date(src,dest)}">
          <echo file="${buildfile}" append="true">-c ${buildfile} -f ${src} -o ${dest} -l ${lang} -cv ${cvers} -pal ${pal} ${vccflag}</echo>
        </ifnot>
      </do>
    </foreach>
    <exec program="${asbin}\BR.VC.Compiler.exe" commandline="-c ${buildfile}" />
  </target>
  <target name="font_ttf" description="compiles the intermediate file">
    <!--echo message="Compiling TTF Fonts" /-->
    <property name="target" value="ttf" />
    <property name="buildfile" value="${tmp_folder}\${target}.arg" />
    <if test="${file::exists(buildfile)}">
      <delete file="${buildfile}" verbose="${verbose}" failonerror="false" />
    </if>
    <foreach item="File" property="filename">
      <in>
        <items>
          <include name="temp\objects\config1\pcc1\vcfntdat\*.${target}.vci" />
        </items>
      </in>
      <do>
        <property name="tmp" value="" />
        <property name="src" value="" />
        <property name="file" value="" />
        <regex pattern="(?'file'\w+).${target}.vci$" input="${filename}" />
        <regex pattern="\\temp\\objects(?'tmp'.*)$" input="${filename}" />
        <property name="src" value="temp\objects${tmp}" />
        <property name="dest" value="temp\objects\config1\pcc1\vcfntdat\${file}.${target}.vco" />
        <ifnot test="${file::up-to-date(src,dest)}">
          <echo file="${buildfile}" append="true">-c ${buildfile} -f ${src} -o ${dest} -l ${lang} -cv ${cvers} -pal ${pal} ${vccflag}</echo>
        </ifnot>
      </do>
    </foreach>
    <exec program="${asbin}\BR.VC.Compiler.exe" commandline="-c ${buildfile}" />
  </target>
  <target name="font_ttc" description="compiles the intermediate file">
    <!--echo message="Compiling TTC Fonts" /-->
    <property name="target" value="ttc" />
    <property name="buildfile" value="${tmp_folder}\${target}.arg" />
    <if test="${file::exists(buildfile)}">
      <delete file="${buildfile}" verbose="${verbose}" failonerror="false" />
    </if>
    <foreach item="File" property="filename">
      <in>
        <items>
          <include name="temp\objects\config1\pcc1\vcfntdat\*.${target}.vci" />
        </items>
      </in>
      <do>
        <property name="tmp" value="" />
        <property name="file" value="" />
        <property name="src" value="" />
        <regex pattern="(?'file'\w+).${target}.vci$" input="${filename}" />
        <regex pattern="\\temp\\objects(?'tmp'.*)$" input="${filename}" />
        <property name="src" value="temp\objects${tmp}" />
        <property name="dest" value="temp\objects\config1\pcc1\vcfntdat\${file}.${target}.vco" />
        <ifnot test="${file::up-to-date(src,dest)}">
          <echo file="${buildfile}" append="true">-c ${buildfile} -f ${src} -o ${dest} -l ${lang} -cv ${cvers} -pal ${pal} ${vccflag}</echo>
        </ifnot>
      </do>
    </foreach>
    <exec program="${asbin}\BR.VC.Compiler.exe" commandline="-c ${buildfile}" />
  </target>
  <target name="hardware" description="compiles the intermediate file" depends="virtualkeys">
    <!--echo message="Compiling HardwareInfo"/-->
    <property name="target" value="dis" />
    <property name="buildfile" value="${tmp_folder}\${target}.arg" />
    <if test="${file::exists(buildfile)}">
      <delete file="${buildfile}" verbose="${verbose}" failonerror="false" />
    </if>
    <foreach item="File" property="filename">
      <in>
        <items>
          <include name="${tmp_folder}\${target}.*.vci" />
        </items>
      </in>
      <do>
        <property name="tmp" value="" />
        <property name="src" value="" />
        <property name="file" value="" />
        <regex pattern="${target}.(?'file'\w+).vci$" input="${filename}" />
        <regex pattern="\\temp\\objects(?'tmp'.*)$" input="${filename}" />
        <property name="src" value="temp\objects${tmp}" />
        <property name="dest" value="${tmp_folder}\${target}.${file}.vco" />
        <ifnot test="${file::up-to-date(src,dest)}">
          <echo file="${buildfile}" append="true">-c ${buildfile} -f ${src} -o ${dest} -l ${lang} -cv ${cvers} -pal ${pal} ${vccflag}</echo>
        </ifnot>
      </do>
    </foreach>
    <exec program="${asbin}\BR.VC.Compiler.exe" commandline="-c ${buildfile}" />
  </target>
  <target name="languagefonts" description="compiles the intermediate file">
    <!--echo message="Compiling LanguageFonts" /-->
    <property name="target" value="lfnt" />
    <property name="buildfile" value="${tmp_folder}\${target}.arg" />
    <if test="${file::exists(buildfile)}">
      <delete file="${buildfile}" verbose="${verbose}" failonerror="false" />
    </if>
    <foreach item="File" property="filename">
      <in>
        <items>
          <include name="${tmp_folder}\*.${target}" />
        </items>
      </in>
      <do>
        <property name="tmp" value="" />
        <property name="src" value="" />
        <property name="file" value="" />
        <regex pattern="\\temp\\objects(?'tmp'.*)$" input="${filename}" />
        <regex pattern="\\config1\\pcc1\\${vcobj}\\(?'file'.*).lfnt$" input="${tmp}" />
        <property name="src" value="temp\objects${tmp}" />
        <property name="dest" value="${tmp_folder}\${target}.${file}.vco" />
        <ifnot test="${file::up-to-date(src,dest)}">
          <echo file="${buildfile}" append="true">-c ${buildfile} -f ${src} -o ${dest} -l ${lang} -cv ${cvers} -pal ${pal} ${vccflag}</echo>
        </ifnot>
      </do>
    </foreach>
    <exec program="${asbin}\BR.VC.Compiler.exe" commandline="-c ${buildfile}" />
  </target>
  <target name="datapoints" description="compiles the intermediate file">
    <!--echo message="Compiling Datapoints"/-->
    <property name="target" value="dpt" />
    <property name="buildfile" value="${tmp_folder}\${target}.arg" />
    <if test="${file::exists(buildfile)}">
      <delete file="${buildfile}" verbose="${verbose}" failonerror="false" />
    </if>
    <foreach item="File" property="filename">
      <in>
        <items>
          <include name="logical\vcshared\datasources\*.${target}" />
        </items>
      </in>
      <do>
        <property name="tmp" value="" />
        <property name="src" value="" />
        <property name="file" value="" />
        <regex pattern="(?'file'\w+).dpt$" input="${filename}" />
        <regex pattern="\\logical(?'tmp'.*)$" input="${filename}" />
        <property name="dest" value="${tmp_shared}\${target}.${file}.vco" />
        <property name="src" value="logical${tmp}" />
        <ifnot test="${file::up-to-date(src,dest)}">
          <echo file="${buildfile}" append="true">-c ${buildfile} -f ${src} -o ${dest} -l ${lang} -cv ${cvers} -pal ${pal} ${vccflag}</echo>
        </ifnot>
      </do>
    </foreach>
    <exec program="${asbin}\BR.VC.Compiler.exe" commandline="-c ${buildfile}" />
  </target>
  <target name="datasources" description="compiles the intermediate file" depends="datapoints">
    <!--echo message="Compiling DatapointSources"/-->
    <property name="target" value="dso" />
    <property name="buildfile" value="${tmp_folder}\${target}.arg" />
    <if test="${file::exists(buildfile)}">
      <delete file="${buildfile}" verbose="${verbose}" failonerror="false" />
    </if>
    <foreach item="File" property="filename">
      <in>
        <items>
          <include name="logical\vcshared\datasources\*.${target}" />
        </items>
      </in>
      <do>
        <property name="tmp" value="" />
        <property name="file" value="" />
        <property name="src" value="" />
        <regex pattern="(?'file'\w+).dso$" input="${filename}" />
        <regex pattern="\\logical(?'tmp'.*)$" input="${filename}" />
        <property name="dest" value="${tmp_shared}\${target}.${file}.vco" />
        <property name="src" value="logical${tmp}" />
        <ifnot test="${file::up-to-date(src,dest)}">
          <echo file="${buildfile}" append="true">-c ${buildfile} -f ${src} -o ${dest} -l ${lang} -cv ${cvers} -pal ${pal} ${vccflag}</echo>
        </ifnot>
      </do>
    </foreach>
    <exec program="${asbin}\BR.VC.Compiler.exe" commandline="-c ${buildfile}" />
  </target>
  <target name="virtualkeys" description="compiles the intermediate file" depends="datapoints">
    <!--echo message="Compiling VirtualKeys"/-->
    <property name="target" value="vcvk" />
    <property name="buildfile" value="${tmp_folder}\${target}.arg" />
    <if test="${file::exists(buildfile)}">
      <delete file="${buildfile}" verbose="${verbose}" failonerror="false" />
    </if>
    <foreach item="File" property="filename">
      <in>
        <items>
          <include name="logical\${vcobj}\*.${target}" />
        </items>
      </in>
      <do>
        <property name="file" value="" />
        <property name="tmp" value="" />
        <property name="src" value="" />
        <regex pattern="(?'file'\w+).vcvk$" input="${filename}" />
        <regex pattern="\\logical(?'tmp'.*)$" input="${filename}" />
        <property name="dest" value="${tmp_folder}\${target}.${file}.vco" />
        <property name="src" value="logical${tmp}" />
        <ifnot test="${file::up-to-date(src,dest)}">
          <echo file="${buildfile}" append="true">-c ${buildfile} -f ${src} -o ${dest} -l ${lang} -cv ${cvers} -pal ${pal} ${vccflag}</echo>
        </ifnot>
      </do>
    </foreach>
    <exec program="${asbin}\BR.VC.Compiler.exe" commandline="-c ${buildfile}" />
  </target>
  <target name="runtime" description="compiles the intermediate file" depends="stylesheets,datapoints,languagefonts">
    <!--echo message="Compiling Runtime"/-->
    <property name="target" value="vcrt" />
    <property name="buildfile" value="${tmp_folder}\${target}.arg" />
    <if test="${file::exists(buildfile)}">
      <delete file="${buildfile}" verbose="${verbose}" failonerror="false" />
    </if>
    <foreach item="File" property="filename">
      <in>
        <items>
          <include name="logical\${vcobj}\package.vcp" />
        </items>
      </in>
      <do>
        <property name="file" value="" />
        <property name="tmp" value="" />
        <property name="src" value="" />
        <regex pattern="\\logical(?'tmp'.*)$" input="${filename}" />
        <property name="dest" value="${tmp_folder}\${target}.vco" />
        <property name="src" value="logical${tmp}" />
        <ifnot test="${file::up-to-date(src,dest)}">
          <echo file="${buildfile}" append="true">-c ${buildfile} -f ${src} -o ${dest} -n ${vcobj} -sl ${DefaultLanguage} -cv ${cvers} ${vccflag}</echo>
        </ifnot>
      </do>
    </foreach>
    <exec program="${asbin}\BR.VC.Compiler.exe" commandline="-c ${buildfile}" />
  </target>
  <target name="alarmconfig" description="compiles the intermediate file">
    <!--echo message="Compiling AlarmConfig"/-->
    <property name="target" value="alcfg" />
    <property name="buildfile" value="${tmp_folder}\${target}.arg" />
    <if test="${file::exists(buildfile)}">
      <delete file="${buildfile}" verbose="${verbose}" failonerror="false" />
    </if>
    <foreach item="File" property="filename">
      <in>
        <items>
          <include name="logical\vcshared\alarmgroups\*.${target}" />
        </items>
      </in>
      <do>
        <property name="file" value="" />
        <property name="tmp" value="" />
        <property name="src" value="" />
        <regex pattern="(?'file'\w+).${target}$" input="${filename}" />
        <regex pattern="\\logical(?'tmp'.*)$" input="${filename}" />
        <property name="dest" value="${tmp_shared}\${target}.${file}.vco" />
        <property name="src" value="logical${tmp}" />
        <ifnot test="${file::up-to-date(src,dest)}">
          <echo file="${buildfile}" append="true">-c ${buildfile} -f ${src} -o ${dest} -l ${lang} -cv ${cvers} -pal ${pal} ${vccflag}</echo>
        </ifnot>
      </do>
    </foreach>
    <exec program="${asbin}\BR.VC.Compiler.exe" commandline="-c ${buildfile}" />
  </target>
  <target name="touchpads" description="compiles the intermediate file" depends="stylesheets,virtualkeys,languagefonts,bitmaps">
    <!--echo message="Compiling Touchpads"/-->
    <property name="target" value="tpr" />
    <property name="buildfile" value="${tmp_folder}\${target}.arg" />
    <if test="${file::exists(buildfile)}">
      <delete file="${buildfile}" verbose="${verbose}" failonerror="false" />
    </if>
    <foreach item="File" property="filename">
      <in>
        <items>
          <include name="logical\${vcobj}\Touchpads\*.${target}" />
        </items>
      </in>
      <do>
        <property name="file" value="" />
        <property name="tmp" value="" />
        <property name="src" value="" />
        <regex pattern="(?'file'\w+).tpr$" input="${filename}" />
        <regex pattern="\\logical(?'tmp'.*)$" input="${filename}" />
        <property name="dest" value="${tmp_folder}\${target}.${file}.vco" />
        <property name="src" value="logical${tmp}" />
        <ifnot test="${file::up-to-date(src,dest)}">
          <echo file="${buildfile}" append="true">-c ${buildfile} -f ${src} -o ${dest} -l ${lang} -cv ${cvers} -pal ${pal} -ds ${ds} ${vccflag}</echo>
        </ifnot>
      </do>
    </foreach>
    <exec program="${asbin}\BR.VC.Compiler.exe" commandline="-c ${buildfile}" />
  </target>
  <target name="HwPP" description="compiles the intermediate file">
    <!--echo message="Start HardwareParser"/-->
    <property name="buildfile" value="build" />
    <property name="target" value="dis" />
    <foreach item="File" property="filename">
      <in>
        <items>
          <include name="physical\config1\pcc1\${vcobj}\*.${target}" />
        </items>
      </in>
      <do>
        <property name="file" value="" />
        <property name="tmp" value="" />
        <property name="src" value="" />
        <regex pattern="(?'file'\w+).dis$" input="${filename}" />
        <regex pattern="\\physical(?'tmp'.*)$" input="${filename}" />
        <property name="dest" value="${tmp_folder}\${target}.${file}.vci" />
        <property name="src" value="physical${tmp}" />
        <ifnot test="${file::up-to-date(src,dest)}">
          <exec program="${asbin}\BR.VC.hwpp.exe" commandline="-c ${buildfile} -n ${vcobj} -cv ${cvers} -k ${vkey} -pal ${pal} ${vccflag}" />
        </ifnot>
      </do>
    </foreach>
  </target>
  <target name="link" description="link the intermediate file" depends="">
    <!--echo message="Start Link"/-->
    <exec program="${make}" commandline="--win32 -f '${projectmake}' all" />
  </target>
  <property name="DefStyleSheet" value="Color" />
  <property name="ProjectPath" value="C:\Projects\BR\BTH41Z23.pgp" />
  <property name="DefaultLanguage" value="cs-CZ" />
  <property name="vcobj" value="GUI_01" />
  <property name="vcini" value="C:\Projects\BR\BTH41Z23.pgp\pgm\BTH41_Z1\CPU\VisualComponents\vc.ini" />
  <property name="asbin" value="C:\BR_AS_251_L001\Bin" />
</project>